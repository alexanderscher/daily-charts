name: Deploy Store Turn
on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Configure AWS Credentials using GitHub Secrets
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::742736545134:role/store-turn-github-action
          aws-region: us-east-1

      - name: Check STS Identity
        run: aws sts get-caller-identity

      # Step 3: Cleanup old ECR images before building new one
      - name: Cleanup ECR Images
        run: |
          IMAGES=$(aws ecr list-images --repository-name spotify-charts-ecr --query 'imageIds[*]' --output json)
          if [ "$IMAGES" != "[]" ]; then
            aws ecr batch-delete-image \
              --repository-name spotify-charts-ecr \
              --image-ids "$IMAGES"
          else
            echo "No images to delete."
          fi

          IMAGES=$(aws ecr list-images --repository-name velocity-ecr --query 'imageIds[*]' --output json)
          if [ "$IMAGES" != "[]" ]; then
            aws ecr batch-delete-image \
              --repository-name velocity-ecr \
              --image-ids "$IMAGES"
          else
            echo "No images to delete."
          fi

      # Step 4: Set up Docker Buildx (needed for multi-platform builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 5: Log in to Amazon ECR to push the image
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 742736545134.dkr.ecr.us-east-1.amazonaws.com

      # Step 6: Build and Push the Docker image to ECR
      - name: Build and Push Docker Image to ECR
        run: |
          docker buildx build --platform linux/amd64 -t 742736545134.dkr.ecr.us-east-1.amazonaws.com/spotify-charts-ecr:latest --push --provenance=false ./spotify

          docker buildx build --platform linux/amd64 -t 742736545134.dkr.ecr.us-east-1.amazonaws.com/velocity-ecr:latest --push --provenance=false ./spotify

      # Step 7: Update the Lambda function with the new image
      - name: Update Lambda Function with New Image
        run: |
          aws lambda update-function-code \
            --function-name spotify-charts \
            --image-uri 742736545134.dkr.ecr.us-east-1.amazonaws.com/spotify-charts-ecr:latest

            aws lambda update-function-code \
            --function-name velocity \
            --image-uri 742736545134.dkr.ecr.us-east-1.amazonaws.com/velocity-ecr:latest

      # Step 8: Install Terraform
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2

      # Step 9: Initialize Terraform
      - name: Initialize Terraform
        run: terraform init
        working-directory: ./tf/spotify

      # Step 10: Validate Terraform configuration
      - name: Validate Terraform
        run: terraform validate
        working-directory: ./tf/spotify

      # Step 11: Plan Terraform changes
      - name: Terraform Plan

        run: |
          terraform plan \
            -var "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -var "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            -var "alex=${{ secrets.ALEX }}" \
            -var "alex_mail=${{ secrets.ALEX_MAIL }}" \
            -var "conor=${{ secrets.CONOR }}" \
            -var "ari=${{ secrets.ARI }}" \
            -var "laura=${{ secrets.LAURA }}" \
            -var "micah=${{ secrets.MICAH }}" \
            -var "spotify_chart_username=${{ secrets.SPOTIFY_CHART_USERNAME }}" \
            -var "spotify_chart_password=${{ secrets.SPOTIFY_CHART_PASSWORD }}" \
            -var "db_password=${{ secrets.DB_PASSWORD }}" \
            -var "spotify_client_id=${{ secrets.SPOTIFY_CLIENT_ID }}" \
            -var "spotify_client_secret=${{ secrets.SPOTIFY_CLIENT_SECRET }}" \
            -var "spotify_user_id=${{ secrets.SPOTIFY_USER_ID }}" \
            -var "spotify_client_id_l2tk=${{ secrets.SPOTIFY_CLIENT_ID_L2TK }}" \
            -var "spotify_client_secret_l2tk=${{ secrets.SPOTIFY_CLIENT_SECRET_L2TK }}" \
            -var "spotify_user_id_l2tk=${{ secrets.SPOTIFY_USER_ID_L2TK }}" \
            -var "spotify_client_id_alena=${{ secrets.SPOTIFY_CLIENT_ID_ALENA }}" \
            -var "spotify_client_secret_alena=${{ secrets.SPOTIFY_CLIENT_SECRET_ALENA }}" \
            -var "spotify_user_id_alena=${{ secrets.SPOTIFY_USER_ID_ALENA }}" \

        working-directory: ./tf/spotify

      # Step 12: Apply Terraform changes
      - name: Apply Terraform Changes

        run: |
          terraform apply -auto-approve \
            -var "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -var "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            -var "alex=${{ secrets.ALEX }}" \
            -var "alex_mail=${{ secrets.ALEX_MAIL }}" \
            -var "conor=${{ secrets.CONOR }}" \
            -var "ari=${{ secrets.ARI }}" \
            -var "laura=${{ secrets.LAURA }}" \
            -var "micah=${{ secrets.MICAH }}" \
            -var "spotify_chart_username=${{ secrets.SPOTIFY_CHART_USERNAME }}" \
            -var "spotify_chart_password=${{ secrets.SPOTIFY_CHART_PASSWORD }}" \
            -var "db_password=${{ secrets.DB_PASSWORD }}" \
            -var "spotify_client_id=${{ secrets.SPOTIFY_CLIENT_ID }}" \
            -var "spotify_client_secret=${{ secrets.SPOTIFY_CLIENT_SECRET }}" \
            -var "spotify_user_id=${{ secrets.SPOTIFY_USER_ID }}" \
            -var "spotify_client_id_l2tk=${{ secrets.SPOTIFY_CLIENT_ID_L2TK }}" \
            -var "spotify_client_secret_l2tk=${{ secrets.SPOTIFY_CLIENT_SECRET_L2TK }}" \
            -var "spotify_user_id_l2tk=${{ secrets.SPOTIFY_USER_ID_L2TK }}" \
            -var "spotify_client_id_alena=${{ secrets.SPOTIFY_CLIENT_ID_ALENA }}" \
            -var "spotify_client_secret_alena=${{ secrets.SPOTIFY_CLIENT_SECRET_ALENA }}" \
            -var "spotify_user_id_alena=${{ secrets.SPOTIFY_USER_ID_ALENA }}" \

        working-directory: ./tf/spotify
